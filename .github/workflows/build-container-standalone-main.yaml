name: PROD - Build Image using Containerfile
on:
  push:
    branches:
      - 'main'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  CONTAINER_REPO: ${{ github.repository }}

permissions:
  id-token: write
  contents: read
  packages: write
  attestations: write
  actions: read
  security-events: write

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Get LanguageTool Version
      run: bash ./get_current_lt.sh
      shell: bash
      id: get-version

    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        image: languagetool
        tags: prod v${{ steps.get-version.outputs.LT_VERSION }}
        containerfiles: |
          ./Containerfile

    - name: Run Healthcheck
      run: bash ./healthcheck.sh ${{ steps.build-image.outputs.image }}
      shell: bash

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push To GitHub Container Registry
      id: push-to-repo
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ env.REGISTRY }}/${{ env.CONTAINER_REPO }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.CONTAINER_REPO }}/${{ steps.build-image.outputs.image }}
        subject-digest: ${{ steps.push-to-repo.outputs.digest }}
        push-to-registry: true

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.24.0
      with:
        image-ref: '${{ env.REGISTRY }}/${{ env.CONTAINER_REPO }}/${{ steps.build-image.outputs.image }}:dev'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
        ignore-unfixed: true
      env:
        TRIVY_USERNAME: ${{ secrets.REGISTRY_USER }}
        TRIVY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
